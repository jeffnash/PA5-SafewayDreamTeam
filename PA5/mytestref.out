	.data
	.align	2
	.globl	class_nameTab
	.globl	Main_protObj
	.globl	Int_protObj
	.globl	String_protObj
	.globl	bool_const0
	.globl	bool_const1
	.globl	_int_tag
	.globl	_bool_tag
	.globl	_string_tag
_int_tag:
	.word	3
_bool_tag:
	.word	4
_string_tag:
	.word	5
	.globl	_MemMgr_INITIALIZER
_MemMgr_INITIALIZER:
	.word	_NoGC_Init
	.globl	_MemMgr_COLLECTOR
_MemMgr_COLLECTOR:
	.word	_NoGC_Collect
	.globl	_MemMgr_TEST
_MemMgr_TEST:
	.word	0
	.word	-1
str_const16:
	.word	5
	.word	5
	.word	String_dispTab
	.word	int_const14
	.byte	0	
	.align	2
	.word	-1
str_const15:
	.word	5
	.word	6
	.word	String_dispTab
	.word	int_const15
	.ascii	"Offset"
	.byte	0	
	.align	2
	.word	-1
str_const14:
	.word	5
	.word	5
	.word	String_dispTab
	.word	int_const2
	.ascii	"Cat"
	.byte	0	
	.align	2
	.word	-1
str_const13:
	.word	5
	.word	5
	.word	String_dispTab
	.word	int_const2
	.ascii	"Dog"
	.byte	0	
	.align	2
	.word	-1
str_const12:
	.word	5
	.word	6
	.word	String_dispTab
	.word	int_const3
	.ascii	"Main"
	.byte	0	
	.align	2
	.word	-1
str_const11:
	.word	5
	.word	6
	.word	String_dispTab
	.word	int_const15
	.ascii	"String"
	.byte	0	
	.align	2
	.word	-1
str_const10:
	.word	5
	.word	5
	.word	String_dispTab
	.word	int_const2
	.ascii	"Int"
	.byte	0	
	.align	2
	.word	-1
str_const9:
	.word	5
	.word	5
	.word	String_dispTab
	.word	int_const4
	.ascii	"IO"
	.byte	0	
	.align	2
	.word	-1
str_const8:
	.word	5
	.word	6
	.word	String_dispTab
	.word	int_const15
	.ascii	"Object"
	.byte	0	
	.align	2
	.word	-1
str_const7:
	.word	5
	.word	7
	.word	String_dispTab
	.word	int_const12
	.ascii	"_prim_slot"
	.byte	0	
	.align	2
	.word	-1
str_const6:
	.word	5
	.word	7
	.word	String_dispTab
	.word	int_const16
	.ascii	"SELF_TYPE"
	.byte	0	
	.align	2
	.word	-1
str_const5:
	.word	5
	.word	7
	.word	String_dispTab
	.word	int_const16
	.ascii	"_no_class"
	.byte	0	
	.align	2
	.word	-1
str_const4:
	.word	5
	.word	8
	.word	String_dispTab
	.word	int_const17
	.ascii	"<basic class>"
	.byte	0	
	.align	2
	.word	-1
str_const3:
	.word	5
	.word	5
	.word	String_dispTab
	.word	int_const2
	.ascii	"aaa"
	.byte	0	
	.align	2
	.word	-1
str_const2:
	.word	5
	.word	6
	.word	String_dispTab
	.word	int_const3
	.ascii	"Bool"
	.byte	0	
	.align	2
	.word	-1
str_const1:
	.word	5
	.word	5
	.word	String_dispTab
	.word	int_const2
	.ascii	"bbb"
	.byte	0	
	.align	2
	.word	-1
str_const0:
	.word	5
	.word	7
	.word	String_dispTab
	.word	int_const16
	.ascii	"mytest.cl"
	.byte	0	
	.align	2
	.word	-1
int_const17:
	.word	3
	.word	4
	.word	Int_dispTab
	.word	13
	.word	-1
int_const16:
	.word	3
	.word	4
	.word	Int_dispTab
	.word	9
	.word	-1
int_const15:
	.word	3
	.word	4
	.word	Int_dispTab
	.word	6
	.word	-1
int_const14:
	.word	3
	.word	4
	.word	Int_dispTab
	.word	0
	.word	-1
int_const13:
	.word	3
	.word	4
	.word	Int_dispTab
	.word	20
	.word	-1
int_const12:
	.word	3
	.word	4
	.word	Int_dispTab
	.word	10
	.word	-1
int_const11:
	.word	3
	.word	4
	.word	Int_dispTab
	.word	388
	.word	-1
int_const10:
	.word	3
	.word	4
	.word	Int_dispTab
	.word	18
	.word	-1
int_const9:
	.word	3
	.word	4
	.word	Int_dispTab
	.word	1000
	.word	-1
int_const8:
	.word	3
	.word	4
	.word	Int_dispTab
	.word	200
	.word	-1
int_const7:
	.word	3
	.word	4
	.word	Int_dispTab
	.word	30
	.word	-1
int_const6:
	.word	3
	.word	4
	.word	Int_dispTab
	.word	150
	.word	-1
int_const5:
	.word	3
	.word	4
	.word	Int_dispTab
	.word	100
	.word	-1
int_const4:
	.word	3
	.word	4
	.word	Int_dispTab
	.word	2
	.word	-1
int_const3:
	.word	3
	.word	4
	.word	Int_dispTab
	.word	4
	.word	-1
int_const2:
	.word	3
	.word	4
	.word	Int_dispTab
	.word	3
	.word	-1
int_const1:
	.word	3
	.word	4
	.word	Int_dispTab
	.word	188
	.word	-1
int_const0:
	.word	3
	.word	4
	.word	Int_dispTab
	.word	1
	.word	-1
bool_const0:
	.word	4
	.word	4
	.word	Bool_dispTab
	.word	0
	.word	-1
bool_const1:
	.word	4
	.word	4
	.word	Bool_dispTab
	.word	1
class_nameTab:
	.word	str_const8
	.word	str_const9
	.word	str_const12
	.word	str_const10
	.word	str_const2
	.word	str_const11
	.word	str_const13
	.word	str_const14
	.word	str_const15
class_objTab:
	.word	Object_protObj
	.word	Object_init
	.word	IO_protObj
	.word	IO_init
	.word	Main_protObj
	.word	Main_init
	.word	Int_protObj
	.word	Int_init
	.word	Bool_protObj
	.word	Bool_init
	.word	String_protObj
	.word	String_init
	.word	Dog_protObj
	.word	Dog_init
	.word	Cat_protObj
	.word	Cat_init
	.word	Offset_protObj
	.word	Offset_init
Object_dispTab:
	.word	Object.abort
	.word	Object.type_name
	.word	Object.copy
Offset_dispTab:
	.word	Object.abort
	.word	Object.type_name
	.word	Object.copy
	.word	Offset.ifthenelse
	.word	Offset.equal
	.word	Offset.whileloop
	.word	Offset.casestatement
Dog_dispTab:
	.word	Object.abort
	.word	Object.type_name
	.word	Object.copy
	.word	Dog.e
	.word	Dog.f
Cat_dispTab:
	.word	Object.abort
	.word	Object.type_name
	.word	Object.copy
	.word	Cat.e
	.word	Dog.f
	.word	Cat.d
String_dispTab:
	.word	Object.abort
	.word	Object.type_name
	.word	Object.copy
	.word	String.length
	.word	String.concat
	.word	String.substr
Bool_dispTab:
	.word	Object.abort
	.word	Object.type_name
	.word	Object.copy
Int_dispTab:
	.word	Object.abort
	.word	Object.type_name
	.word	Object.copy
IO_dispTab:
	.word	Object.abort
	.word	Object.type_name
	.word	Object.copy
	.word	IO.out_string
	.word	IO.out_int
	.word	IO.in_string
	.word	IO.in_int
Main_dispTab:
	.word	Object.abort
	.word	Object.type_name
	.word	Object.copy
	.word	IO.out_string
	.word	IO.out_int
	.word	IO.in_string
	.word	IO.in_int
	.word	Main.examples
	.word	Main.main
	.word	-1
Object_protObj:
	.word	0
	.word	3
	.word	Object_dispTab
	.word	-1
Offset_protObj:
	.word	8
	.word	3
	.word	Offset_dispTab
	.word	-1
Dog_protObj:
	.word	6
	.word	6
	.word	Dog_dispTab
	.word	int_const14
	.word	str_const16
	.word	0
	.word	-1
Cat_protObj:
	.word	7
	.word	7
	.word	Cat_dispTab
	.word	int_const14
	.word	str_const16
	.word	0
	.word	bool_const0
	.word	-1
String_protObj:
	.word	5
	.word	5
	.word	String_dispTab
	.word	int_const14
	.word	0
	.word	-1
Bool_protObj:
	.word	4
	.word	4
	.word	Bool_dispTab
	.word	0
	.word	-1
Int_protObj:
	.word	3
	.word	4
	.word	Int_dispTab
	.word	0
	.word	-1
IO_protObj:
	.word	1
	.word	3
	.word	IO_dispTab
	.word	-1
Main_protObj:
	.word	2
	.word	7
	.word	Main_dispTab
	.word	bool_const0
	.word	str_const16
	.word	int_const14
	.word	0
	.globl	heap_start
heap_start:
	.word	0
	.text
	.globl	Main_init
	.globl	Int_init
	.globl	String_init
	.globl	Bool_init
	.globl	Main.main
Object_init:
	addiu	$sp $sp -12
	sw	$fp 12($sp)
	sw	$s0 8($sp)
	sw	$ra 4($sp)
	addiu	$fp $sp 16
	move	$s0 $a0
	move	$a0 $s0
	lw	$fp 12($sp)
	lw	$s0 8($sp)
	lw	$ra 4($sp)
	addiu	$sp $sp 12
	jr	$ra
Offset_init:
	addiu	$sp $sp -12
	sw	$fp 12($sp)
	sw	$s0 8($sp)
	sw	$ra 4($sp)
	addiu	$fp $sp 16
	move	$s0 $a0
	jal	Object_init
	move	$a0 $s0
	lw	$fp 12($sp)
	lw	$s0 8($sp)
	lw	$ra 4($sp)
	addiu	$sp $sp 12
	jr	$ra
Dog_init:
	addiu	$sp $sp -12
	sw	$fp 12($sp)
	sw	$s0 8($sp)
	sw	$ra 4($sp)
	addiu	$fp $sp 16
	move	$s0 $a0
	jal	Object_init
	la	$a0 int_const5
	sw	$a0 12($s0)
	la	$a0 str_const2
	sw	$a0 16($s0)
	move	$a0 $s0
	lw	$fp 12($sp)
	lw	$s0 8($sp)
	lw	$ra 4($sp)
	addiu	$sp $sp 12
	jr	$ra
Cat_init:
	addiu	$sp $sp -12
	sw	$fp 12($sp)
	sw	$s0 8($sp)
	sw	$ra 4($sp)
	addiu	$fp $sp 16
	move	$s0 $a0
	jal	Dog_init
	la	$a0 bool_const1
	sw	$a0 24($s0)
	move	$a0 $s0
	lw	$fp 12($sp)
	lw	$s0 8($sp)
	lw	$ra 4($sp)
	addiu	$sp $sp 12
	jr	$ra
String_init:
	addiu	$sp $sp -12
	sw	$fp 12($sp)
	sw	$s0 8($sp)
	sw	$ra 4($sp)
	addiu	$fp $sp 16
	move	$s0 $a0
	jal	Object_init
	move	$a0 $s0
	lw	$fp 12($sp)
	lw	$s0 8($sp)
	lw	$ra 4($sp)
	addiu	$sp $sp 12
	jr	$ra
Bool_init:
	addiu	$sp $sp -12
	sw	$fp 12($sp)
	sw	$s0 8($sp)
	sw	$ra 4($sp)
	addiu	$fp $sp 16
	move	$s0 $a0
	jal	Object_init
	move	$a0 $s0
	lw	$fp 12($sp)
	lw	$s0 8($sp)
	lw	$ra 4($sp)
	addiu	$sp $sp 12
	jr	$ra
Int_init:
	addiu	$sp $sp -12
	sw	$fp 12($sp)
	sw	$s0 8($sp)
	sw	$ra 4($sp)
	addiu	$fp $sp 16
	move	$s0 $a0
	jal	Object_init
	move	$a0 $s0
	lw	$fp 12($sp)
	lw	$s0 8($sp)
	lw	$ra 4($sp)
	addiu	$sp $sp 12
	jr	$ra
IO_init:
	addiu	$sp $sp -12
	sw	$fp 12($sp)
	sw	$s0 8($sp)
	sw	$ra 4($sp)
	addiu	$fp $sp 16
	move	$s0 $a0
	jal	Object_init
	move	$a0 $s0
	lw	$fp 12($sp)
	lw	$s0 8($sp)
	lw	$ra 4($sp)
	addiu	$sp $sp 12
	jr	$ra
Main_init:
	addiu	$sp $sp -12
	sw	$fp 12($sp)
	sw	$s0 8($sp)
	sw	$ra 4($sp)
	addiu	$fp $sp 16
	move	$s0 $a0
	jal	IO_init
	la	$a0 bool_const1
	sw	$a0 12($s0)
	la	$a0 str_const1
	sw	$a0 16($s0)
	la	$a0 int_const1
	sw	$a0 20($s0)
	move	$a0 $s0
	lw	$fp 12($sp)
	lw	$s0 8($sp)
	lw	$ra 4($sp)
	addiu	$sp $sp 12
	jr	$ra
Offset.ifthenelse:
	addiu	$sp $sp -12
	sw	$fp 12($sp)
	sw	$s0 8($sp)
	sw	$ra 4($sp)
	addiu	$fp $sp 16
	move	$s0 $a0
	la	$a0 bool_const1
	lw	$t1 12($a0)
	beqz	$t1 label0
	la	$a0 int_const10
	b	label1
label0:
	la	$a0 int_const11
label1:
	lw	$fp 12($sp)
	lw	$s0 8($sp)
	lw	$ra 4($sp)
	addiu	$sp $sp 12
	jr	$ra
Offset.equal:
	addiu	$sp $sp -20
	sw	$fp 12($sp)
	sw	$s0 8($sp)
	sw	$ra 4($sp)
	addiu	$fp $sp 16
	move	$s0 $a0
	sw	$s1 4($fp)
	la	$s1 int_const12
	la	$t2 int_const13
	move	$t1 $s1
	la	$a0 bool_const1
	beq	$t1 $t2 label2
	la	$a1 bool_const0
	jal	equality_test
label2:
	lw	$s1 4($fp)
	lw	$fp 12($sp)
	lw	$s0 8($sp)
	lw	$ra 4($sp)
	addiu	$sp $sp 20
	jr	$ra
Offset.whileloop:
	addiu	$sp $sp -12
	sw	$fp 12($sp)
	sw	$s0 8($sp)
	sw	$ra 4($sp)
	addiu	$fp $sp 16
	move	$s0 $a0
label3:
	la	$a0 bool_const0
	lw	$t1 12($a0)
	beq	$t1 $zero label4
	la	$a0 bool_const0
	b	label3
label4:
	move	$a0 $zero
	lw	$fp 12($sp)
	lw	$s0 8($sp)
	lw	$ra 4($sp)
	addiu	$sp $sp 12
	jr	$ra
Offset.casestatement:
	addiu	$sp $sp -36
	sw	$fp 12($sp)
	sw	$s0 8($sp)
	sw	$ra 4($sp)
	addiu	$fp $sp 16
	move	$s0 $a0
	sw	$s1 12($fp)
	sw	$s2 16($fp)
	sw	$s3 20($fp)
	la	$a0 int_const2
	bne	$a0 $zero label6
	la	$a0 str_const0
	li	$t1 41
	jal	_case_abort2
label6:
	lw	$t2 0($a0)
	blt	$t2 4 label7
	bgt	$t2 4 label7
	move	$s1 $a0
	la	$a0 bool_const1
	bne	$a0 $zero label9
	la	$a0 str_const0
	li	$t1 41
	jal	_case_abort2
label9:
	lw	$t2 0($a0)
	blt	$t2 3 label10
	bgt	$t2 3 label10
	move	$s2 $a0
	la	$a0 int_const2
label11:
	la	$s3 bool_const0
	lw	$t1 12($s3)
	beq	$t1 $zero label12
	la	$a0 bool_const0
	b	label11
label12:
	move	$a0 $zero
	b	label8
label10:
	jal	_case_abort
label8:
	b	label5
label7:
	blt	$t2 3 label13
	bgt	$t2 3 label13
	move	$s1 $a0
	move	$s2 $s1
	la	$a0 int_const2
	jal	Object.copy
	lw	$t2 12($a0)
	lw	$t1 12($s2)
	add	$t1 $t1 $t2
	sw	$t1 12($a0)
	b	label5
label13:
	jal	_case_abort
label5:
	lw	$s1 12($fp)
	lw	$s2 16($fp)
	lw	$s3 20($fp)
	lw	$fp 12($sp)
	lw	$s0 8($sp)
	lw	$ra 4($sp)
	addiu	$sp $sp 36
	jr	$ra
Dog.e:
	addiu	$sp $sp -12
	sw	$fp 12($sp)
	sw	$s0 8($sp)
	sw	$ra 4($sp)
	addiu	$fp $sp 16
	move	$s0 $a0
	la	$a0 int_const6
	sw	$a0 12($s0)
	la	$a0 int_const2
	sw	$a0 0($fp)
	lw	$fp 12($sp)
	lw	$s0 8($sp)
	lw	$ra 4($sp)
	addiu	$sp $sp 16
	jr	$ra
Dog.f:
	addiu	$sp $sp -12
	sw	$fp 12($sp)
	sw	$s0 8($sp)
	sw	$ra 4($sp)
	addiu	$fp $sp 16
	move	$s0 $a0
	la	$a0 int_const7
	lw	$a0 20($s0)
	move	$t1 $a0
	la	$a0 bool_const1
	beqz	$t1 label14
	la	$a0 bool_const0
label14:
	la	$a0 int_const2
	la	$a0 Offset_protObj
	jal	Object.copy
	jal	Offset_init
	sw	$a0 20($s0)
	lw	$a0 20($s0)
	move	$t1 $a0
	la	$a0 bool_const1
	beqz	$t1 label15
	la	$a0 bool_const0
label15:
	la	$a0 int_const2
	lw	$fp 12($sp)
	lw	$s0 8($sp)
	lw	$ra 4($sp)
	addiu	$sp $sp 12
	jr	$ra
Cat.d:
	addiu	$sp $sp -12
	sw	$fp 12($sp)
	sw	$s0 8($sp)
	sw	$ra 4($sp)
	addiu	$fp $sp 16
	move	$s0 $a0
	lw	$a0 36($fp)
	lw	$a0 32($fp)
	lw	$a0 28($fp)
	lw	$a0 24($fp)
	lw	$a0 20($fp)
	lw	$a0 16($fp)
	lw	$a0 12($fp)
	lw	$a0 8($fp)
	lw	$a0 4($fp)
	lw	$a0 0($fp)
	lw	$a0 12($s0)
	la	$a0 str_const3
	lw	$fp 12($sp)
	lw	$s0 8($sp)
	lw	$ra 4($sp)
	addiu	$sp $sp 52
	jr	$ra
Cat.e:
	addiu	$sp $sp -12
	sw	$fp 12($sp)
	sw	$s0 8($sp)
	sw	$ra 4($sp)
	addiu	$fp $sp 16
	move	$s0 $a0
	la	$a0 int_const8
	sw	$a0 12($s0)
	la	$a0 int_const9
	sw	$a0 0($fp)
	lw	$fp 12($sp)
	lw	$s0 8($sp)
	lw	$ra 4($sp)
	addiu	$sp $sp 16
	jr	$ra
Main.examples:
	addiu	$sp $sp -72
	sw	$fp 12($sp)
	sw	$s0 8($sp)
	sw	$ra 4($sp)
	addiu	$fp $sp 16
	move	$s0 $a0
	sw	$s1 36($fp)
	sw	$s2 40($fp)
	sw	$s3 44($fp)
	sw	$s4 48($fp)
	sw	$s5 52($fp)
	sw	$s6 56($fp)
	la	$s1 int_const2
	lw	$a0 12($s0)
	lw	$a0 16($s0)
	lw	$a0 20($s0)
label16:
	la	$s2 int_const3
	la	$a0 bool_const1
	lw	$t1 12($a0)
	beq	$t1 $zero label17
	la	$a0 bool_const1
	b	label16
label17:
	move	$a0 $zero
	la	$s2 bool_const1
	la	$s1 int_const14
	la	$s2 int_const14
	la	$s3 int_const14
	la	$s4 int_const14
	la	$s5 int_const14
	la	$s6 int_const14
	la	$a0 int_const14
	sw	$a0 8($fp)
	la	$a0 int_const14
	sw	$a0 4($fp)
	la	$a0 int_const2
	bne	$a0 $zero label19
	la	$a0 str_const0
	li	$t1 10
	jal	_case_abort2
label19:
	lw	$t2 0($a0)
	blt	$t2 7 label20
	bgt	$t2 7 label20
	sw	$a0 0($fp)
	lw	$a0 0($fp)
	b	label18
label20:
	blt	$t2 4 label21
	bgt	$t2 4 label21
	sw	$a0 0($fp)
	lw	$a0 0($fp)
	b	label18
label21:
	blt	$t2 3 label22
	bgt	$t2 3 label22
	sw	$a0 0($fp)
	lw	$a0 0($fp)
	b	label18
label22:
	jal	_case_abort
label18:
	lw	$s1 36($fp)
	lw	$s2 40($fp)
	lw	$s3 44($fp)
	lw	$s4 48($fp)
	lw	$s5 52($fp)
	lw	$s6 56($fp)
	lw	$fp 12($sp)
	lw	$s0 8($sp)
	lw	$ra 4($sp)
	addiu	$sp $sp 80
	jr	$ra
Main.main:
	addiu	$sp $sp -12
	sw	$fp 12($sp)
	sw	$s0 8($sp)
	sw	$ra 4($sp)
	addiu	$fp $sp 16
	move	$s0 $a0
	lw	$a0 24($s0)
	move	$t1 $a0
	la	$a0 bool_const1
	beqz	$t1 label25
	la	$a0 bool_const0
label25:
	lw	$t1 12($a0)
	beqz	$t1 label23
	la	$a0 int_const0
	b	label24
label23:
	la	$a0 int_const4
label24:
	sw	$a0 0($sp)
	addiu	$sp $sp -4
	move	$a0 $s0
	bne	$a0 $zero label26
	la	$a0 str_const0
	li	$t1 19
	jal	_dispatch_abort
label26:
	lw	$t1 8($a0)
	lw	$t1 16($t1)
	jalr	$t1
	lw	$fp 12($sp)
	lw	$s0 8($sp)
	lw	$ra 4($sp)
	addiu	$sp $sp 12
	jr	$ra
